name: "‚ö° EnigMano Win11 + CRD + 19 Workers + Dask"

on:
  workflow_dispatch:

jobs:
  # ================================
  # MASTER = RDP + Dask Scheduler
  # ================================
  master:
    runs-on: windows-latest
    steps:
      - name: üìå Deployment Parameters
        shell: pwsh
        run: |
          Write-Host "==============================================="
          Write-Host "üîπ EnigMano MASTER Instance (Scheduler + CRD)"
          Write-Host "üì¶ Repository : $env:GITHUB_REPOSITORY"
          Write-Host "==============================================="

      - name: üì• Install Python + Dask + CRD
        shell: pwsh
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          pip install "dask[distributed]" psutil

          $crdInstaller = "$env:TEMP\crdhost.msi"
          Invoke-WebRequest "https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi" -OutFile $crdInstaller
          Start-Process msiexec.exe -ArgumentList "/i `"$crdInstaller`" /quiet /norestart" -Wait
          Remove-Item $crdInstaller -Force
          Write-Host "‚úÖ CRD installed."

      - name: ‚öîÔ∏è Start Chrome Remote Desktop Host
        shell: pwsh
        run: |
          $exe = "${Env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          if (-not (Test-Path $exe)) { Write-Error "‚ùå CRD executable not found"; exit 1 }
          & $exe --code="4/0AVGzR1CPn1WsjPbWHmGsqtZC885ukNDfXCiNtIvDEf7ss8bhAKNCQHt7IUtJxORDE7nRCQ" `
            --redirect-url="https://remotedesktop.google.com/_/oauthredirect" `
            --name=$Env:COMPUTERNAME --pin=123456

      - name: üöÄ Start Dask Scheduler
        shell: pwsh
        run: |
          Start-Process powershell -ArgumentList "-Command python -m distributed.cli.dask_scheduler --host 0.0.0.0 --port 8786" -NoNewWindow
          Write-Host "‚úÖ Dask Scheduler running on port 8786"

      # Keep Alive last, pour que la VM RDP reste ouverte
      - name: üïí MASTER Keep Alive (6h)
        shell: pwsh
        run: |
          $total = 21600
          for ($s = $total; $s -ge 0; $s--) {
            [Math]::Sqrt((Get-Random)) > $null
            $null = ,(New-Object byte[](1MB))
            if ($s % 60 -eq 0) { Write-Host "MASTER $s secondes restantes..." }
            Start-Sleep -Milliseconds 900
          }
          Write-Host "‚è∞ MASTER Keep Alive termin√© apr√®s 6h."

  # ================================
  # WORKERS = CPU/RAM boosters Dask
  # ================================
  workers:
    runs-on: windows-latest
    needs: []  # üî• Lancement parall√®le direct
    strategy:
      matrix:
        instance: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
    steps:
      - name: üöÄ Worker ${{ matrix.instance }} Setup
        shell: pwsh
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          pip install "dask[distributed]" psutil

      - name: üîó Connect Worker ${{ matrix.instance }} to Scheduler
        shell: pwsh
        run: |
          $schedulerIP = "MASTER_IP_HERE"  # remplacer par l'IP publique du master RDP
          Start-Process powershell -ArgumentList "-Command python -m distributed.cli.dask_worker $schedulerIP:8786 --nthreads 2 --memory-limit 15GB" -NoNewWindow
          Write-Host "‚úÖ Worker ${{ matrix.instance }} connected to Dask Scheduler"

      - name: üïí Worker Keep Alive (6h)
        shell: pwsh
        run: |
          $total = 21600
          $mem = @()
          for ($s = $total; $s -ge 0; $s--) {
            [Math]::Sqrt((Get-Random)) > $null
            $mem += ,(New-Object byte[](1MB))
            if ($s % 60 -eq 0) { Write-Host "Worker ${{ matrix.instance }} : $s secondes restantes..." }
            Start-Sleep -Milliseconds 900
          }
          Write-Host "‚è∞ Worker ${{ matrix.instance }} Keep Alive termin√©"
