name: "‚ö° EnigMano Win11 + CRD Cluster (Max Free - installer once)"

on:
  workflow_dispatch:

jobs:
  # 1) Job unique : t√©l√©charge l'installateur CRD et l'uploade comme artifact
  prepare-installer:
    runs-on: windows-latest
    outputs:
      artifact-name: crd-installer
    steps:
      - name: üìå Prepare - show host info
        shell: pwsh
        run: |
          Write-Host "Prepare job running on $(hostname)"
          Get-CimInstance Win32_ComputerSystem | Select-Object Name, TotalPhysicalMemory, NumberOfLogicalProcessors

      - name: üì• Download CRD installer (with retries)
        id: download_crd
        shell: pwsh
        run: |
          $out = "$env:TEMP\chromeremotedesktophost.msi"
          $url = "https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi"
          $tries = 0
          while ($tries -lt 5) {
            try {
              Write-Host "Attempt $($tries+1) to download CRD..."
              Invoke-WebRequest -Uri $url -OutFile $out -UseBasicParsing -TimeoutSec 120
              Write-Host "Download OK: $out"
              break
            } catch {
              Write-Warning "Download failed: $_. Retrying in 10s..."
              Start-Sleep -Seconds 10
              $tries++
            }
          }
          if (-not (Test-Path $out)) { throw "CRD installer not downloaded after retries." }
          Write-Host "CRD installer ready at: $out"
          echo "installer_path=$out" >> $GITHUB_OUTPUT

      - name: üì¶ Upload CRD installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: crd-installer
          path: ${{ steps.download_crd.outputs.installer_path }}

  # 2) Worker jobs (matrix) : attend que prepare-installer soit fini, t√©l√©charge l'artifact,
  #    installe CRD seulement si n√©cessaire puis lance host.
  deploy-enigmano:
    needs: prepare-installer
    runs-on: windows-latest
    strategy:
      matrix:
        instance: [1,2,3,4,5,6,7,8,9,10,
                   11,12,13,14,15,16,17,18,19,20]
      max-parallel: 20

    steps:
      - name: üìå Deployment Parameters
        shell: pwsh
        run: |
          Write-Host "==============================================="
          Write-Host "üîπ EnigMano Instance : ${{ matrix.instance }}"
          Write-Host "üì¶ Repository        : $env:GITHUB_REPOSITORY"
          Write-Host "==============================================="

      - name: ‚¨áÔ∏è Download CRD installer artifact
        uses: actions/download-artifact@v4
        with:
          name: crd-installer
          path: $env:TEMP\crd_artifact
      - name: üîç Check existing CRD installation
        shell: pwsh
        run: |
          $exePath = "${Env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          if (Test-Path $exePath) {
            Write-Host "‚úÖ CRD executable already present at $exePath. Skipping install."
            exit 0
          } else {
            Write-Host "‚ÑπÔ∏è CRD not found. Will install from artifact if present."
          }

      - name: üõ†Ô∏è Install Chrome Remote Desktop (only if not present) - robust
        shell: pwsh
        run: |
          $exePath = "${Env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          if (Test-Path $exePath) {
            Write-Host "Already installed ‚Äî skipping."
          } else {
            $artifactFile = Get-ChildItem -Path "$env:TEMP\crd_artifact" -Filter "*.msi" -Recurse | Select-Object -First 1
            if (-not $artifactFile) {
              # Fallback: download directly (with retries)
              Write-Warning "Artifact not found, fallback to direct download."
              $tmp = "$env:TEMP\chromeremotedesktophost.msi"
              $url = "https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi"
              $tries = 0
              while ($tries -lt 4) {
                try {
                  Invoke-WebRequest -Uri $url -OutFile $tmp -UseBasicParsing -TimeoutSec 120
                  $artifactFile = Get-Item $tmp
                  break
                } catch {
                  Write-Warning "Download fallback failed: $_. Retrying..."
                  Start-Sleep -Seconds 8
                  $tries++
                }
              }
            }
            if (-not $artifactFile) { throw "Installer absent and fallback failed." }
            Write-Host "Installing CRD from $($artifactFile.FullName)..."
            Start-Process msiexec.exe -ArgumentList "/i `"$($artifactFile.FullName)`" /quiet /norestart" -Wait
            Start-Sleep -Seconds 6
            if (-not (Test-Path $exePath)) { throw "CRD install failed on this runner." }
            Write-Host "‚úÖ CRD installed successfully on this runner."
          }

      - name: ‚öîÔ∏è Start Chrome Remote Desktop Host
        shell: pwsh
        run: |
          $exe = "${Env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          if (-not (Test-Path $exe)) {
            Write-Error "‚ùå CRD executable not found at $exe ‚Äî aborting start."
            exit 1
          }
          & $exe `
            --code="4/0AVGzR1BsK5CpCw8qZQzrIcuXlWJZ7cNz5-x3Zk8ySZAfK7K2iIjakwlck5P3fvEBtslJ0g" `
            --redirect-url="https://remotedesktop.google.com/_/oauthredirect" `
            --name="EnigMano-${{ matrix.instance }}" `
            --pin=123456

      - name: üïí Keep Alive 6h Timer (light logs)
        shell: pwsh
        run: |
          $total = 21600
          for ($s = $total; $s -ge 0; $s--) {
            if ($s % 300 -eq 0) { Write-Host "Instance ${{ matrix.instance }} ‚Üí $s s restantes..." }
            Start-Sleep -Seconds 1
          }
          Write-Host "‚è∞ 6h √©coul√©es pour Instance ${{ matrix.instance }}"

      - name: üí† Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "‚úÖ EnigMano Instance ${{ matrix.instance }} deployed with Chrome Remote Desktop."
